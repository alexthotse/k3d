name: Test Matrix

on: workflow_dispatch

jobs:
# The latest known failing docker version is not supported anymore.
# -> Uncomment the following job once we see another one failing.
#  test-docker-versions-failing:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        docker_version:
#          - "20.10.3"
#    steps:
#      - uses: actions/checkout@v4
#      - name: Setup Docker
#        uses: docker/setup-docker-action@v4
#        with:
#          version: "${{ env.DOCKER_VERSION }}"
#      - name: Test Docker Version expected to fail
#        run: |
#          echo "Running test with docker version ${{matrix.docker_version}}"
#          docker info
#          set +e
#          make e2e \
#            -e E2E_DIND_VERSION=${{matrix.docker_version}} \
#            -e E2E_INCLUDE=test_basic
#          if [[ $? == 0 ]]; then
#            echo "ATTENTION: Test passed while it was expected to fail!"
#            exit 1
#          fi
#          set -e

  test-docker-versions:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker_version:
          - "v23.0.15"
          - "v25.0.6"
          - "v26.1.5"
          - "v27.4.0"
    steps:
      - uses: actions/checkout@v4
      - name: Setup Docker
        uses: docker/setup-docker-action@v4
      - name: Test Docker Version expected to pass
        run: |
          echo "Running test with docker version ${{matrix.docker_version}}"
          docker info
          make e2e \
            -e E2E_DIND_VERSION=${{matrix.docker_version}} \
            -e E2E_INCLUDE=test_basic

# The latest known failing K3s version is not supported anymore.
# -> Uncomment the following job once we see another one failing.
#  test-k3s-versions-failing:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        k3s_channel:
#          - "v1.17"
#    steps:
#      - uses: actions/checkout@v4
#      - name: Setup Docker
#        uses: docker/setup-docker-action@v4
#        with:
#          version: "${{ env.DOCKER_VERSION }}"
#      - name: Test K3s Version expected to fail
#        run: |
#          echo "Running test with docker version ${{matrix.k3s_channel}}"
#          docker info
#          set +e
#          make e2e \
#            -e E2E_K3S_VERSION=+${{matrix.k3s_channel}} \
#            -e E2E_INCLUDE=test_full_lifecycle
#          if [[ $? == 0 ]]; then
#            echo "ATTENTION: Test passed while it was expected to fail!"
#            exit 1
#          fi
#          set -e

  test-k3s-versions:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        k3s_channel:
          - "v1.30"
          - "v1.31"
          - "v1.32"
          - "v1.33"
    steps:
      - uses: actions/checkout@v4
      - name: Setup Docker
        uses: docker/setup-docker-action@v4
      - name: Test K3s Version expected to pass
        run: |
          echo "Running test with K3s version ${{matrix.k3s_channel}}"
          make e2e \
            -e E2E_K3S_VERSION=+${{matrix.k3s_channel}} \
            -e E2E_INCLUDE=test_full_lifecycle

  test-podman-runtime:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman
      - name: Start and Check Podman Socket
        run: |
          sudo systemctl start podman.socket
          sudo systemctl status podman.socket --no-pager
          podman version # Verify installation
      - name: Create k3d network for Podman
        run: |
          sudo podman network create k3d || echo "Podman network 'k3d' may already exist."
          sudo podman network inspect k3d
      - name: Run e2e tests with Podman
        env:
          K3D_RUNTIME_UNDER_TEST: podman
        run: |
          echo "Running e2e tests with Podman..."
           make build # Ensure k3d binary is built first
           make e2e-direct # This will run tests directly on the runner
